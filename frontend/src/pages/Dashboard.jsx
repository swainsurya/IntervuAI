import { useEffect, useState } from "react"
import { Button } from "@/components/ui/button"
import InterviewCard from "@/components/mycomponents/InterviewCard"
import { Link } from "react-router-dom"
import { Laptop } from "lucide-react"
import { useUser } from "@/store/UserStore"
import axios from "axios"
import CardSkeleton from "@/components/mycomponents/CardSkeleton"

export default function DashboardPage() {
  const [allInterviews, setAllInterviews] = useState([]);
  const [pastInterviews, setPastInterviews] = useState([]);
  const [loading, setLoading] = useState(false);

  const userid = localStorage.getItem("userid");

  const getAllInterviews = async () => {
    setLoading(true);
    try {
      const response = await axios.post("https://intervuai-3id4.onrender.com/ai/others", {});
      const interviews = response.data.interviews;
      setAllInterviews(interviews);
    } catch (error) {
      setAllInterviews([]);
    }
    finally {
      setLoading(false);
    }
  }

  const getPastInterviews = async () => {
    const response = await axios.post(`https://intervuai-3id4.onrender.com/ai/get-past-interviews`, { userid });
    const interviews = response?.data?.pastInterviews;
    setPastInterviews(interviews);
  }

  useEffect(() => {
    getAllInterviews();
    getPastInterviews();
  }, [])


  return (
    <main className="container mx-auto px-4 py-6 max-w-7xl">
      {/* Hero Section */}
      <section className="mb-10">
        <div className="bg-[#1E1E2D] rounded-xl overflow-hidden">
          <div className="p-6 md:p-8 flex flex-col md:flex-row items-center">
            <div className="md:w-2/3 mb-6 md:mb-0">
              <h1 className="text-2xl md:text-3xl font-bold mb-2">
                Get Interview-Ready with AI-Powered Practice & Feedback
              </h1>
              <p className="text-gray-400 mb-4">Practice real interview questions & get instant feedback</p>
              <Link to={"/generate-interview"}>
                <Button className="bg-purple-600 hover:bg-purple-700">Create an Interview</Button>
              </Link>
            </div>
            <div className="md:w-1/3 flex justify-center">
              <img
                src="/robot.png"
                alt="AI Interview Assistant"
                width={200}
                height={200}
                className="object-contain"
              />
            </div>
          </div>
        </div>
      </section>

      {/* Past Interviews Section */}
      {
        pastInterviews?.length > 0 && (
          <section className="mb-10">
            <h2 className="text-xl font-bold mb-4">Your Past Interviews</h2>
            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
              {pastInterviews.map((interview) => (
                <InterviewCard key={interview._id} interview={interview} type="own" />
              ))}
            </div>
          </section>
        )
      }

      {/* Pick Interview Section */}
      <section>
        <h3 className="text-2xl font-bold mb-4">Pick Interview Generated By others</h3>
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
          {allInterviews.map((interview) => {
            if (loading) {
              return (
                <CardSkeleton />

              )
            }
            else return (<InterviewCard key={interview._id} interview={interview} type="other" />)
          })}
        </div>
      </section>
    </main>
  )
}